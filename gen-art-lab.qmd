---
title: "Generative Art Lab"
format: html
editor: visual
---

# Load packages

```{r}
library(rayshader)
library(tibble)
library(ambient)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(tictoc)
library(dplyr)
library(scales)
```

# Art Piece One

```{r}
iris %>% 
  rename(sep_len = Sepal.Length,
         sep_wid = Sepal.Width,
         pet_len = Petal.Length,
         pet_wid = Petal.Width) %>% 
  ggplot(
    aes(
      x = sep_wid,
      y = pet_wid,
      xend = sep_len,
      yend = pet_len,
      color = pet_wid,
      linewidth = sep_len
      
    )
  ) +
  scale_linewidth(range = c(0.5, 1)) +
  coord_polar(clip = "off") +
  geom_segment() +
  guides(
      color = guide_none(),
      linewidth = guide_none(),
      fill = guide_none(),
      shape = guide_none()
    ) +
  theme_void() +
  
  # The colors chosen for this palette were sampled from real images of each iris species
  scale_color_gradient2(
    low = "#7251dd",
    mid = "#9159c3",
    high = "#cecafc"
  ) 
```


Darkest in center
medium in between
lightest outside

```{r}
sample_data <- function(seed = NULL, n = 100){
  if(!is.null(seed)) set.seed(seed)
  dat <- tibble(
    x0 = runif(n),
    y0 = runif(n),
    x1 = x0 + runif(n, min = -.2, max = .2),
    y1 = y0 + runif(n, min = -.2, max = .2),
    shade = runif(n), 
    size = runif(n),
    shape = factor(sample(0:22, size = n, replace = TRUE))
  )
}
```



```{r}
pal <- c("#7251dd", "#9159c3", "#cecafc")
show_col(pal)
palette_fn <- colorRampPalette(pal)
image(
  x = matrix(1:100, ncol = 1), 
  col = palette_fn(100),
  useRaster = TRUE,
  axes = FALSE
)
```





# Art Piece Two

```{r}
is_within_circle <- function(x_coord, y_coord, x_center, y_center, radius) {
  (x_coord - x_center)^2 + (y_coord - y_center)^2 < radius^2
}

additive_circles <- function(n = 5, pixels = 1000, seed = NULL) {
  
  if(!is.null(seed)) set.seed(seed)
  
  # setup canvas
  art <- long_grid(
    x = seq(0, 1, length.out = pixels),
    y = seq(0, 1, length.out = pixels)
  )
  art$paint <- 0
  
  for(i in 1:n) {
    
    # sample a random circle
    x_center <- rnorm(1, mean = 0.5, sd = 0.1)
    y_center <- abs(x_center - 0.5) * -0.1 + 0.2 
    radius <- runif(1, min = .05, max = .10)
    
    # add +1 to all points inside the circle
    art <- art |>
      mutate(
        paint = paint + is_within_circle(
          x, y, x_center, y_center, radius
        )
      )
  }
  
  # normalise paint to [0, 1] range and return
  art$paint <- normalise(art$paint)
  return(art)
}
```


```{r}
circle_art <- additive_circles(n = 50, pixels = 2000, seed = 13)


ggplot(circle_art, aes(x, y, fill = paint)) +
  geom_raster(show.legend = FALSE) + 
  theme_void()

#ggsave("circles.png", width = 5, height = 5)
```



```{r}
circle_array <- circle_art |>
  as.array(value = paint) 

circle_shadow <- ray_shade(
  heightmap = circle_array,
  sunaltitude = 5, 
  sunangle = 270,
  zscale = .01,
  multicore = TRUE
)

plot_map(circle_shadow, rotate = 270)
```




```{r}
circle_scape <- circle_array |> 
  height_shade() |>
  add_shadow(
    shadowmap = circle_shadow,
    max_darken = .1
  )

plot_map(circle_scape, rotate = 270)
```

